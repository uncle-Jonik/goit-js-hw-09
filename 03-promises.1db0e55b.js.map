{"mappings":"AACaA,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAA+BC,GAC7BA,EAAIC,iBAEJ,IAAIC,EAAU,EACd,MAAMC,EAAaC,OAAOJ,EAAIK,OAAO,GAAGC,OAClCC,EAAYH,OAAOJ,EAAIK,OAAO,GAAGC,OACjCE,EAASJ,OAAOJ,EAAIK,OAAO,GAAGC,OAG9BG,EAAUC,aAAY,KAC1B,IAAuBC,KAiBTR,EAhBL,IAAIS,SAAQ,CAACC,EAASC,KAC3BZ,GAAW,EACX,MAAMa,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,GACFF,EAAQ,uBAERC,EAAK,qBAAqB,GAC3BH,GAECT,IAAYM,GACdW,cAAcV,EAAQ,KAKzBW,MAAKC,IACJC,QAAQC,IAAIF,EAAO,IAEpBG,OAAMH,IACLC,QAAQC,IAAIF,EAAO,GACnB,GACHd,E","sources":["src/js/03-promises.js"],"sourcesContent":["// import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onCreatePromisesClick);\n\nfunction onCreatePromisesClick(evt) {\n  evt.preventDefault();\n\n  let counter = 0;\n  const firstDelay = Number(evt.target[0].value);\n  const delayStep = Number(evt.target[1].value);\n  const amount = Number(evt.target[2].value);\n  // console.log(amount);\n\n  const timerId = setInterval(() => {\n    function createPromise(delay) {\n      return new Promise((resolve, reject) => {\n        counter += 1;\n        const shouldResolve = Math.random() > 0.3;\n\n        setTimeout(() => {\n          if (shouldResolve) {\n            resolve('✅ Fulfilled promise');\n          }\n          reject('❌ Rejected promise');\n        }, delay);\n\n        if (counter === amount) {\n          clearInterval(timerId);\n        }\n      });\n    }\n    createPromise(firstDelay)\n      .then(result => {\n        console.log(result);\n      })\n      .catch(result => {\n        console.log(result);\n      });\n  }, delayStep);\n}\n"],"names":["document","querySelector","addEventListener","evt","preventDefault","counter","firstDelay","Number","target","value","delayStep","amount","timerId","setInterval","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","clearInterval","then","result","console","log","catch"],"version":3,"file":"03-promises.1db0e55b.js.map"}